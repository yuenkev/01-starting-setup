{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ktyue\\\\OneDrive\\\\Desktop\\\\ReactCourse\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport \"./Expenses.css\";\n\n// When passing any prop other than a string (IN THIS CASE AN ARRAY) to a React component, we have to wrap the value in curly braces.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Expenses = props => {\n  _s();\n  // Use state to store the filter year value, as well as the default value\n  const [expenseYearFilter, setExpenseYearFilter] = useState(\"2020\");\n\n  //we're using this funciton/hanlder to save the selected Year, to filter\n  const saveExpenseYearHandler = expenseYear => {\n    //new data with an Year passed up from ExpenseFilter.js as the param\n\n    console.log(\"in expenses.js\");\n    console.log(expenseYear);\n    setExpenseYearFilter(expenseYear);\n    const filteredArray = props.items;\n    console.log(filteredArray);\n  };\n  return (\n    /*#__PURE__*/\n    // Must have one ROOT element (div)\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"expenses\",\n        children: [/*#__PURE__*/_jsxDEV(ExpensesFilter\n        //this selected value is passed to the ExpenseFilter.js to set the select value to the default '2020'\n        , {\n          selected: expenseYearFilter,\n          onSaveYearFilter: saveExpenseYearHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this), \"c\", props.items.map(filteredArray => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n          title: filteredArray.title,\n          amount: filteredArray.amount,\n          date: filteredArray.date\n        }, filteredArray.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(Expenses, \"5Wi3Qzva7fLLYBfSqsfkFcLOe64=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","ExpenseItem","Card","ExpensesFilter","Expenses","props","expenseYearFilter","setExpenseYearFilter","saveExpenseYearHandler","expenseYear","console","log","filteredArray","items","map","title","amount","date","id"],"sources":["C:/Users/ktyue/OneDrive/Desktop/ReactCourse/01-starting-setup/src/components/Expenses/Expenses.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport \"./Expenses.css\";\r\n\r\n// When passing any prop other than a string (IN THIS CASE AN ARRAY) to a React component, we have to wrap the value in curly braces.\r\n\r\nconst Expenses = (props) => {\r\n  // Use state to store the filter year value, as well as the default value\r\n  const [expenseYearFilter, setExpenseYearFilter] = useState(\"2020\");\r\n\r\n  //we're using this funciton/hanlder to save the selected Year, to filter\r\n  const saveExpenseYearHandler = (expenseYear) => {\r\n    //new data with an Year passed up from ExpenseFilter.js as the param\r\n\r\n    console.log(\"in expenses.js\");\r\n    console.log(expenseYear);\r\n\r\n    setExpenseYearFilter(expenseYear);\r\n\r\n    const filteredArray = props.items\r\n\r\n    console.log(filteredArray);\r\n  };\r\n\r\n  return (\r\n    // Must have one ROOT element (div)\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          //this selected value is passed to the ExpenseFilter.js to set the select value to the default '2020'\r\n          selected={expenseYearFilter}\r\n          onSaveYearFilter={saveExpenseYearHandler}\r\n        />\r\n        c\r\n        {/* Here we are using the param in the <Expense items={expenses}/> in App.js to access the array passed into this component thru props*/}\r\n        {props.items.map((filteredArray) => (\r\n          <ExpenseItem\r\n            key={filteredArray.id}\r\n            title={filteredArray.title}\r\n            amount={filteredArray.amount}\r\n            date={filteredArray.date}\r\n          />\r\n        ))}\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAO,gBAAgB;;AAEvB;AAAA;AAEA,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAA;EAC1B;EACA,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGP,QAAQ,CAAC,MAAM,CAAC;;EAElE;EACA,MAAMQ,sBAAsB,GAAIC,WAAW,IAAK;IAC9C;;IAEAC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC7BD,OAAO,CAACC,GAAG,CAACF,WAAW,CAAC;IAExBF,oBAAoB,CAACE,WAAW,CAAC;IAEjC,MAAMG,aAAa,GAAGP,KAAK,CAACQ,KAAK;IAEjCH,OAAO,CAACC,GAAG,CAACC,aAAa,CAAC;EAC5B,CAAC;EAED;IAAA;IACE;IACA;MAAA,uBACE,QAAC,IAAI;QAAC,SAAS,EAAC,UAAU;QAAA,wBACxB,QAAC;QACC;QAAA;UACA,QAAQ,EAAEN,iBAAkB;UAC5B,gBAAgB,EAAEE;QAAuB;UAAA;UAAA;UAAA;QAAA,QACzC,KAEF,EACCH,KAAK,CAACQ,KAAK,CAACC,GAAG,CAAEF,aAAa,iBAC7B,QAAC,WAAW;UAEV,KAAK,EAAEA,aAAa,CAACG,KAAM;UAC3B,MAAM,EAAEH,aAAa,CAACI,MAAO;UAC7B,IAAI,EAAEJ,aAAa,CAACK;QAAK,GAHpBL,aAAa,CAACM,EAAE;UAAA;UAAA;UAAA;QAAA,QAKxB,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA;IACG;MAAA;MAAA;MAAA;IAAA;EACH;AAEV,CAAC;AAAC,GAxCId,QAAQ;AAAA,KAARA,QAAQ;AA0Cd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}