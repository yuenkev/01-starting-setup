{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ktyue\\\\OneDrive\\\\Desktop\\\\ReactCourse\\\\01-starting-setup\\\\src\\\\components\\\\NewExpense\\\\ExpenseForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseForm = props => {\n  _s();\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [enteredDate, setEnteredDate] = useState('');\n\n  // Multi states into ONE\n  // const [userInput, setUserInput] = useState({\n  //   enteredTitle: '',\n  //   enteredAmount: '',\n  //   enteredDate: '',\n  // });\n\n  //gets the entire object, and we get the value of it and put it in the state\n  //to update the variable\n  const titleChangeHandler = event => {\n    setEnteredTitle(event.target.value);\n\n    //better practice to retrieve the previous state's data\n    // setUserInput((prevState) => {\n    //   return {...prevState enteredTitle: event.target.value};\n    // });\n  };\n\n  const amountChangeHandler = event => {\n    setEnteredAmount(event.target.value);\n  };\n  const dateChangeHandler = event => {\n    setEnteredDate(event.target.value);\n  };\n  const submitHandler = event => {\n    //prevents form being sent w/o empty form\n    event.preventDefault();\n\n    //putting all that data into a variable\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate)\n    };\n    props.onSaveExpenseData(expenseData);\n    // console.log(expenseData);\n  };\n\n  //state to handle visiblity of form\n  const [showForm, setShowForm] = useState(false);\n  const show = () => {\n    setShowForm(!showForm);\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: show,\n    children: \"Add New Expense\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this)\n  // <form onSubmit={submitHandler}>\n  //   <div className=\"new-expense__controls\">\n  //     <div className=\"new-expense__control\">\n  //       <label>Title</label>\n  //       {/* Changes back the value to the initial sate value={enteredTitle} */}\n  //       <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler} />\n  //     </div>\n  //     <div className=\"new-expense__control\">\n  //       <label>Amount</label>\n  //       <input type=\"number\" value={enteredAmount}  min=\"0.01\" step=\"0.01\" onChange={amountChangeHandler}/>\n  //     </div>\n  //     <div className=\"new-expense__control\">\n  //       <label>Date</label>\n  //       <input type=\"date\"  value={enteredDate} min=\"2019-01-01\" max=\"2022-12-31\" onChange={dateChangeHandler}/>\n  //     </div>\n  //   </div>\n  //   <div className=\"new-expense__actions\">\n  //     <button type=\"submit\">Add Expense</button>\n  //   </div>\n  // </form>\n  ;\n};\n_s(ExpenseForm, \"kLnyYk9+5V48G3ygAknWCjd/BSI=\");\n_c = ExpenseForm;\nexport default ExpenseForm;\nvar _c;\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["React","useState","ExpenseForm","props","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","titleChangeHandler","event","target","value","amountChangeHandler","dateChangeHandler","submitHandler","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","showForm","setShowForm","show"],"sources":["C:/Users/ktyue/OneDrive/Desktop/ReactCourse/01-starting-setup/src/components/NewExpense/ExpenseForm.js"],"sourcesContent":["import React,{ useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n\r\n  const [enteredTitle, setEnteredTitle] = useState('');\r\n  const [enteredAmount, setEnteredAmount] = useState('');\r\n  const [enteredDate, setEnteredDate] = useState('');\r\n  \r\n  // Multi states into ONE\r\n  // const [userInput, setUserInput] = useState({\r\n  //   enteredTitle: '',\r\n  //   enteredAmount: '',\r\n  //   enteredDate: '',\r\n  // });\r\n\r\n\r\n  //gets the entire object, and we get the value of it and put it in the state\r\n  //to update the variable\r\n  const titleChangeHandler = (event) => {\r\n    \r\n    setEnteredTitle(event.target.value);\r\n\r\n    //better practice to retrieve the previous state's data\r\n    // setUserInput((prevState) => {\r\n    //   return {...prevState enteredTitle: event.target.value};\r\n    // });\r\n\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n\r\n  const submitHandler = (event) => {\r\n    //prevents form being sent w/o empty form\r\n    event.preventDefault();\r\n\r\n    //putting all that data into a variable\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: enteredAmount,\r\n      date: new Date(enteredDate)\r\n    };\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n    // console.log(expenseData);\r\n\r\n  };  \r\n\r\n  //state to handle visiblity of form\r\n  const [showForm, setShowForm] = useState(false);\r\n\r\n  const show = () => {\r\n    setShowForm(!showForm);\r\n  }\r\n\r\n  return (\r\n    <button onClick={show}>Add New Expense</button>\r\n    // <form onSubmit={submitHandler}>\r\n    //   <div className=\"new-expense__controls\">\r\n    //     <div className=\"new-expense__control\">\r\n    //       <label>Title</label>\r\n    //       {/* Changes back the value to the initial sate value={enteredTitle} */}\r\n    //       <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler} />\r\n    //     </div>\r\n    //     <div className=\"new-expense__control\">\r\n    //       <label>Amount</label>\r\n    //       <input type=\"number\" value={enteredAmount}  min=\"0.01\" step=\"0.01\" onChange={amountChangeHandler}/>\r\n    //     </div>\r\n    //     <div className=\"new-expense__control\">\r\n    //       <label>Date</label>\r\n    //       <input type=\"date\"  value={enteredDate} min=\"2019-01-01\" max=\"2022-12-31\" onChange={dateChangeHandler}/>\r\n    //     </div>\r\n    //   </div>\r\n    //   <div className=\"new-expense__actions\">\r\n    //     <button type=\"submit\">Add Expense</button>\r\n    //   </div>\r\n    // </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAQ,OAAO;AACtC,OAAO,mBAAmB;AAAC;AAE3B,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAA;EAE7B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACK,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA,MAAMS,kBAAkB,GAAIC,KAAK,IAAK;IAEpCN,eAAe,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;;IAEnC;IACA;IACA;IACA;EAEF,CAAC;;EAED,MAAMC,mBAAmB,GAAIH,KAAK,IAAK;IACrCJ,gBAAgB,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACtC,CAAC;EAED,MAAME,iBAAiB,GAAIJ,KAAK,IAAK;IACnCF,cAAc,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACpC,CAAC;EAGD,MAAMG,aAAa,GAAIL,KAAK,IAAK;IAC/B;IACAA,KAAK,CAACM,cAAc,EAAE;;IAEtB;IACA,MAAMC,WAAW,GAAG;MAClBC,KAAK,EAAEf,YAAY;MACnBgB,MAAM,EAAEd,aAAa;MACrBe,IAAI,EAAE,IAAIC,IAAI,CAACd,WAAW;IAC5B,CAAC;IAEDL,KAAK,CAACoB,iBAAiB,CAACL,WAAW,CAAC;IACpC;EAEF,CAAC;;EAED;EACA,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMyB,IAAI,GAAG,MAAM;IACjBD,WAAW,CAAC,CAACD,QAAQ,CAAC;EACxB,CAAC;EAED,oBACE;IAAQ,OAAO,EAAEE,IAAK;IAAA,UAAC;EAAe;IAAA;IAAA;IAAA;EAAA;EACtC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAEJ,CAAC;AAAC,GAlFIxB,WAAW;AAAA,KAAXA,WAAW;AAoFjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}